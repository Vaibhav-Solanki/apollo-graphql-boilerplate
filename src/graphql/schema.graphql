scalar DateTime

type Brand {
    id: Int!
    name: String!
    description: String
    website: String
    products: [Product]
}

type Category {
    id: Int!
    name: String!
    description: String
    parent_category_id: Int
    parent_category: Category
}

type Product {
    id: Int!
    brand_id: Int
    brand: Brand
    category_id: Int
    category: Category
    name: String!
    description: String
    price: Float!
    stock_quantity: Int!
    reserved_quantity: Int!
    created_at: DateTime!
}

type Address {
    id: Int!
    customer_id: Int!
    customer: Customer
    address_line1: String!
    address_line2: String
    city: String!
    state: String!
    country: String!
    postal_code: String!
}

type Customer {
    id: Int!
    name: String
    picture: String
    email: String!
    uid: String!
    password: String
    created_at: DateTime!
    addresses: [Address]
}

type Order {
    id: Int!
    customer_id: Int!
    customer: Customer
    order_date: String!
    total_amount: Float!
    status: String!
    shipping_address_id: Int!
    shipping_address: Address
    payment_method: String
    order_items: [OrderItem]
}

type OrderItem {
    id: Int!
    order_id: Int!
    order: Order
    product_id: Int!
    product: Product
    quantity: Int!
    unit_price: Float!
}

type ValueDistribution{
    type :String!
    value:Float!
}

type CartItem {
    id: Int!
    product_id: Int!
    product: Product!
    quantity: Int!
    total_value: Float!
    created_at: DateTime!
}

type Cart {
    customer_id: Int!
    customer: Customer
    cart_items: [CartItem!]!
    value_distribution: [ValueDistribution]
    total_value: Float!
}

type OrderPayment {
    id: Int!
    order_id: Int!
    order: Order
    amount: Float!
    payment_date: String!
    payment_status: String!
    payment_method: String
}

type Review {
    id: Int!
    product_id: Int
    product: Product
    customer_id: Int
    customer: Customer
    rating: Int
    review_text: String
    review_date: String!
}

type Query {
    Ping: String
    brands: [Brand]
    brand(id: Int!): Brand
    categories: [Category]
    category(id: Int!): Category
    products(category_id: Int brand_id: Int): [Product]
    product(id: Int!): Product
    address(id: Int!): Address
    addresses: [Address]
    customers: [Customer]
    customer(id: Int!): Customer
    getUser: Customer
    orders: [Order]
    order(id: Int!): Order
    cart: Cart
    orderPayments: [OrderPayment]
    orderPayment(order_id: Int!): OrderPayment
    reviews(product_id: Int!): [Review]
}

type Mutation {
    createBrand(name: String!, description: String, website: String): Brand
    updateBrand(id: Int!, name: String, description: String, website: String): Brand
    deleteBrand(id: Int!): Brand

    createCategory(name: String!, description: String, parent_category_id: Int): Category
    updateCategory(id: Int!, name: String, description: String, parent_category_id: Int): Category
    deleteCategory(id: Int!): Category

    createProduct(brand_id: Int!, category_id: Int!, name: String!, description: String, price: Float!, stock_quantity: Int!): Product
    updateProduct(id: Int!, brand_id: Int, category_id: Int, name: String, description: String, price: Float, stock_quantity: Int): Product
    deleteProduct(id: Int!): Product

    createAddress(customer_id: Int!, address_line1: String!, address_line2: String, city: String!, state: String!, country: String!, postal_code: String!): Address
    updateAddress(id: Int!, customer_id: Int, address_line1: String, address_line2: String, city: String, state: String, country: String, postal_code: String): Address
    deleteAddress(id: Int!): Address

    createCustomer(first_name: String!, last_name: String!, email: String!, password: String!): Customer
    updateCustomer(id: Int!, first_name: String, last_name: String, email: String, password: String): Customer
    deleteCustomer(id: Int!): Customer

    createOrder(customer_id: Int!, total_amount: Float!, status: String!, shipping_address_id: Int!, payment_method: String): Order
    updateOrder(id: Int!, customer_id: Int, total_amount: Float, status: String, shipping_address_id: Int, payment_method: String): Order
    deleteOrder(id: Int!): Order

    createOrderItem(order_id: Int!, product_id: Int!, quantity: Int!, unit_price: Float!): OrderItem
    updateOrderItem(id: Int!, order_id: Int, product_id: Int, quantity: Int, unit_price: Float): OrderItem
    deleteOrderItem(id: Int!): OrderItem

    createCart(customer_id: Int!, product_id: Int!, quantity: Int!): Cart
    updateCart(id: Int!, customer_id: Int, product_id: Int, quantity: Int): Cart
    deleteCart(id: Int!): Cart

    createOrderPayment(order_id: Int!, amount: Float!, payment_status: String!, payment_method: String): OrderPayment
    updateOrderPayment(id: Int!, order_id: Int, amount: Float, payment_status: String, payment_method: String): OrderPayment
    deleteOrderPayment(id: Int!): OrderPayment

    createReview(product_id: Int!, customer_id: Int!, rating: Int!, review_text: String): Review
    updateReview(id: Int!, product_id: Int, customer_id: Int, rating: Int, review_text: String): Review
    deleteReview(id: Int!): Review
}
